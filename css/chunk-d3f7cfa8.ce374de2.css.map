{"version":3,"sources":["webpack:///src/assets/styles/_reset.scss","webpack:///src/assets/styles/_globals.scss","webpack:///src/assets/styles/index.scss","webpack:///src/components/CreatePost.vue","webpack:///src/assets/styles/_rem.scss"],"names":[],"mappings":"AAAA,0EAAA,CACA,yGAAgI,QAAS,CACvI,SAAU,CACX,kBAEuB,cAAe,CACrC,eAAmB,CACpB,GAGC,eAAgB,CACjB,6BAGC,QAAS,CACV,KAGC,qBAAsB,CACvB,iBAGC,kBAAmB,CACpB,UAGC,WAAY,CACZ,cAAe,CAChB,OAGC,QAAS,CACV,MAGC,wBAAyB,CACzB,gBAAiB,CAClB,MAGC,SAAU,CACX,gCAGC,eAAgB,CACjB,MC5CC,iBAAa,CACb,qBAAiB,CACjB,uBAAgB,CAChB,0BAAmB,CACnB,kBAAc,CACd,0BAAsB,CACtB,qBAAgB,CAChB,kBAAY,CACZ,iBAAa,CCuBf,KACE,6BAA8B,CAE9B,2BAA4B,CAC5B,iCAAkC,CAClC,iCAAkC,CAClC,kCAAmC,CACpC,KAGC,YAAa,CACb,qBAAsB,CACtB,gBAAiB,CAnBjB,iBAAkB,CAqBlB,uBAAwB,CAnBxB,gBACE,uCAAyC,CAC1C,KAqBD,YAAa,CACb,UAAW,CACX,qBAAsB,CACtB,gBAAiB,CACjB,wCAAyC,CAO1C,wBAZD,KAQI,aAAc,CACd,2BAAgC,CAChC,0BAA2B,CAE9B,CAIA,mBADC,eAKgB,CAJjB,IAGC,aACgB,CACjB,MAGC,qBAAsB,CACtB,aAAc,CACd,SAAU,CACV,MAAO,CACP,UAAW,CACX,sCAAuC,CAKxC,wBAXD,MASI,gCAAiC,CAEpC,CAED,sBApEE,sBAAuB,CAwEvB,YAAa,CAtEb,uDACE,oCAAwC,CACzC,sCAwED,uBAAwB,CACzB,YAEC,SAAU,CCgEZ,QACE,aAAc,CACd,kBAAqB,CACrB,UAAW,CACX,mBClI0D,CDoI1D,gBACE,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,kBCxIwD,CDyIxD,iBAAkB,CAClB,iBAAkB,CACnB,cAGC,oBC9IwD,CD+IxD,wBAAyB,CACzB,uBAAwB,CACzB,eAGC,WAAY,CACZ,gBCrJwD,CDsJxD,gBCtJwD,CDuJxD,iBAAkB,CACnB,iBAKC,sBAAuB,CACvB,kBC9JwD,CD+JxD,kBC/JwD,CDgKxD,0BAA2B,CAC5B,+BANC,YAAa,CACb,kBAWuB,CANxB,cAIC,qBAAsB,CAEtB,sBAAuB,CAEvB,yBACE,oCAAwC,CACzC,mBAGC,UAAW,CACX,kBC/KsD,CDgLtD,iBAAkB,CAClB,WAAY,CACb,oBAGC,UAAW,CACX,WAAY,CACZ,cCvLsD,CDwLtD,kBCxLsD,CDyLtD,4BAAkC,CAClC,4BAA6B,CAC7B,YAAa,CACb,iBAAkB,CARnB,0BAWG,8BAA+B,CAChC,+BAGC,eAAgB,CAChB,mBCpMoD,CDqMpD,WAAY,CACZ,eCtMoD,CDuMrD,sBAID,kBAAoB,CACpB,iBC5MsD,CD6MtD,gBC7MsD,CD8MtD,0BAA2B,CAC5B,qBAGC,qBAAsB,CACtB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,QAAS,CACT,cCvNsD,CDwNtD,WAAY,CACZ,WCzNsD,CD0NtD,kBC1NsD,CD2NtD,uBAAgB,CAAhB,oBAAgB,CAAhB,eAAgB,CAChB,gBAAiB,CACjB,oBC7NsD,CD8NtD,6DAAgE,CAChE,cAAe,CAdhB,8BAiBG,UAAY,CACZ,cAAe,CAChB,8BAGC,wBAAyB,CACzB,8BAA+B,CAC/B,kCAAmC,CAHpC,sGAOG,iCAAkC,CAClC,qCAAsC,CACvC,gCAID,uBAAwB,CACxB,8BAA+B,CAC/B,wCAAyC,CAH1C,0GAOG,0BAA2B,CAC3B,iCAAkC,CACnC,qBAMH,iBAAoB,CACpB,YAAa,CACb,gBAAiB,CACjB,UAAW,CACX,6BAA8B","file":"chunk-d3f7cfa8.ce374de2.css","sourcesContent":["/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */\nhtml, body, p, ol, ul, li, dl, dt, dd, blockquote, figure, fieldset, legend, textarea, pre, iframe, hr, h1, h2, h3, h4, h5, h6 {margin: 0;\n  padding: 0;\n}\n\nh1, h2, h3, h4, h5, h6 {font-size: 100%;\n  font-weight: normal;\n}\n\nul {\n  list-style: none;\n}\n\nbutton, input, select, textarea {\n  margin: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n\nimg, video {\n  height: auto;\n  max-width: 100%;\n}\n\niframe {\n  border: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd, th {\n  padding: 0;\n}\n\ntd:not([align]), th:not([align]) {\n  text-align: left;\n}\n",":root {\n  --text-color: #333;\n  --text-color-alt: #999;\n  --primary-color: #d0455e;\n  --background-color: #f3f1f0;\n  --white-color: #fff;\n  --mobie-header-height: calc(72px + 15px);\n  --header-height: calc(144px + 24px);\n  --max-width: 1170px;\n  --app-margin: 55px;\n}\n","@import 'sass-rem';\n@import 'sass-mq';\n@import 'rem';\n@import 'reset';\n@import 'globals';\n@import '~sass-mq/mq';\n@import '~swiper/css/swiper.css';\n\n$mq-breakpoints: (\n  mobile:  320px,\n  mobileLarge: 550px,\n  tablet:  768px,\n  desktop: 980px,\n  wide:    1170px\n);\n\n@mixin sans-serif {\n  font-family: sans-serif;\n\n  .wf-active & {\n    font-family: 'IBM Plex Sans', sans-serif;\n  }\n}\n\n@mixin serif {\n  font-family: serif;\n\n  .wf-active & {\n    font-family: 'IBM Plex Serif', sans-serif;\n  }\n}\n\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  text-rendering: optimizeLegibility;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  @include serif;\n  color: var(--text-color);\n}\n\n#app {\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: var(--background-color);\n\n  @include mq($from: tablet) {\n    margin: 0 auto;\n    padding: rem(0 var(--app-margin));\n    max-width: var(--max-width);\n  }\n}\n\n.viewport-lock {\n  overflow: hidden;\n}\n\nsvg {\n  display: block;\n  overflow: hidden;\n}\n\n.main {\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: 0;\n  flex: 1;\n  width: 100%;\n  padding-top: var(--mobie-header-height);\n\n  @include mq($from: tablet) {\n    padding-top: var(--header-height);\n  }\n}\n\ninput,\nbutton,\ntextarea {\n  @include sans-serif;\n  outline: none;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .15s;\n}\n.fade-enter {\n  opacity: 0;\n}\n\n","@import '@/assets/styles/index.scss';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.create {\n  margin: 0 auto;\n  padding: rem(24px 0 0);\n  width: 100%;\n  max-width: rem(374px);\n\n  &__header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: rem(0 0 40px);\n    position: relative;\n    text-align: center;\n  }\n\n  &__back {\n    margin-right: rem(-24px);\n    transform: rotate(180deg);\n    color: var(--text-black);\n  }\n\n  &__title {\n    flex-grow: 1;\n    font-size: rem(24px);\n    line-height: rem(32px);\n    text-align: center;\n  }\n\n  &__success {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: rem(18px);\n    line-height: rem(24px);\n    color: var(--primary-color);\n  }\n\n  &__form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: sans-serif;\n\n    .wf-active & {\n      font-family: 'IBM Plex Sans', sans-serif;\n    }\n\n    &_wrap {\n      width: 100%;\n      padding: rem(0 0 24px);\n      position: relative;\n      border: none;\n    }\n\n    &_input {\n      width: 100%;\n      height: 48px;\n      padding: rem(0 16px);\n      font-size: rem(18px);\n      border: 1px solid rgba(0, 0, 0, 0);\n      transition: border-color .15s;\n      outline: none;\n      border-radius: 4px;\n\n      &:focus {\n        border-color: var(--text-black);\n      }\n\n      &--multiline {\n        overflow: hidden;\n        padding-top: rem(10px);\n        height: auto;\n        min-height: rem(144px);\n      }\n    }\n\n    &_message {\n      padding: rem(4px 0 0);\n      font-size: rem(14px);\n      line-height: rem(16px);\n      color: var(--primary-color);\n    }\n\n    &_button {\n      box-sizing: border-box;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 0;\n      padding: rem(0 16px);\n      width: 175px;\n      height: rem(48px);\n      font-size: rem(18px);\n      appearance: none;\n      border: 1px solid;\n      border-radius: rem(4px);\n      transition: color .15s, background-color .15s, border-color .15s;\n      cursor: pointer;\n\n      &:disabled {\n        opacity: 0.6;\n        cursor: default;\n      }\n\n      &--primary {\n        color: var(--white-color);\n        border-color: var(--text-color);\n        background-color: var(--text-color);\n\n        &:not(:disabled):hover,\n        &:not(:disabled):focus {\n          border-color: var(--primary-color);\n          background-color: var(--primary-color);\n        }\n      }\n\n      &--secondary {\n        color: var(--text-color);\n        border-color: var(--text-color);\n        background-color: var(--background-color);\n\n        &:not(:disabled):hover,\n        &:not(:disabled):focus {\n          color: var(--primary-color);\n          border-color: var(--primary-color);\n        }\n\n      }\n    }\n\n    &_footer {\n      padding: rem(8px 0 0);\n      display: flex;\n      flex-wrap: nowrap;\n      width: 100%;\n      justify-content: space-between;\n    }\n  }\n}\n\n","$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  }\n\n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n\n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n"]}